[
 {
  "lines": [
   {
    "content": "public static int aliquotSum(int number) {",
    "indent": 0
   },
   {
    "content": "int sum = 0;",
    "indent": 1
   },
   {
    "content": "for (int i = 1, limit = number / 2; i <= limit; ++i) {",
    "indent": 1
   },
   {
    "content": "if (number % i == 0) {",
    "indent": 2
   },
   {
    "content": "sum += i;",
    "indent": 3
   },
   {
    "content": "}",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "return sum;",
    "indent": 1
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 0,
  "fileEnding": "java",
  "title": "aliquotsum",
  "charCount": 161
 },
 {
  "lines": [
   {
    "content": "public static void bubbleSort(int[] arr) {",
    "indent": 0
   },
   {
    "content": "var lastIndex = arr.length - 1;",
    "indent": 1
   },
   {
    "content": "",
    "indent": 1
   },
   {
    "content": "for(var j = 0; j < lastIndex; j++) {",
    "indent": 1
   },
   {
    "content": "for(var i = 0; i < lastIndex - j; i++) {",
    "indent": 2
   },
   {
    "content": "if(arr[i] > arr[i + 1]) {",
    "indent": 3
   },
   {
    "content": "var tmp = arr[i];",
    "indent": 4
   },
   {
    "content": "arr[i] = arr[i + 1];",
    "indent": 4
   },
   {
    "content": "arr[i + 1] = tmp;",
    "indent": 4
   },
   {
    "content": "}",
    "indent": 3
   },
   {
    "content": "}",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 1,
  "fileEnding": "java",
  "title": "bubblesort",
  "charCount": 244
 },
 {
  "lines": [
   {
    "content": "public static double floor(double number) {",
    "indent": 0
   },
   {
    "content": "if (number - (int) number == 0) {",
    "indent": 1
   },
   {
    "content": "return number;",
    "indent": 2
   },
   {
    "content": "} else if (number - (int) number > 0) {",
    "indent": 1
   },
   {
    "content": "return (int) number;",
    "indent": 2
   },
   {
    "content": "} else {",
    "indent": 1
   },
   {
    "content": "return (int) number - 1;",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 2,
  "fileEnding": "java",
  "title": "floor",
  "charCount": 191
 },
 {
  "lines": [
   {
    "content": "public static int max(int[] array, int low, int high) {",
    "indent": 0
   },
   {
    "content": "if (low == high) {",
    "indent": 1
   },
   {
    "content": "return array[low];",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "",
    "indent": 1
   },
   {
    "content": "int mid = (low + high) >>> 1;",
    "indent": 1
   },
   {
    "content": "",
    "indent": 1
   },
   {
    "content": "int leftMax = max(array, low, mid);",
    "indent": 1
   },
   {
    "content": "int rightMax = max(array, mid + 1, high);",
    "indent": 1
   },
   {
    "content": "",
    "indent": 1
   },
   {
    "content": "return Math.max(leftMax, rightMax);",
    "indent": 1
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 3,
  "fileEnding": "java",
  "title": "maxdivconq",
  "charCount": 244
 },
 {
  "lines": [
   {
    "content": "public static long pow(int a, int b) {",
    "indent": 0
   },
   {
    "content": "long result = 1;",
    "indent": 1
   },
   {
    "content": "for (int i = 1; i <= b; i++) {",
    "indent": 1
   },
   {
    "content": "result *= a;",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "return result;",
    "indent": 1
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 4,
  "fileEnding": "java",
  "title": "pow",
  "charCount": 118
 },
 {
  "lines": [
   {
    "content": "public static void checkPrimeNumber(int num) {",
    "indent": 0
   },
   {
    "content": "boolean flag = false;",
    "indent": 1
   },
   {
    "content": "for (int i = 2; i <= num / 2; ++i) {",
    "indent": 1
   },
   {
    "content": "if (num % i == 0) {",
    "indent": 2
   },
   {
    "content": "flag = true;",
    "indent": 3
   },
   {
    "content": "break;",
    "indent": 3
   },
   {
    "content": "}",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "",
    "indent": 1
   },
   {
    "content": "if (!flag)",
    "indent": 1
   },
   {
    "content": "System.out.println(num + \" is a prime number.\");",
    "indent": 2
   },
   {
    "content": "else",
    "indent": 1
   },
   {
    "content": "System.out.println(num + \" is not a prime number.\");",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 5,
  "fileEnding": "java",
  "title": "prime",
  "charCount": 270
 },
 {
  "lines": [
   {
    "content": "public static boolean isPythagTriple(int a, int b, int c) {",
    "indent": 0
   },
   {
    "content": "if (a <= 0 || b <= 0 || c <= 0) {",
    "indent": 1
   },
   {
    "content": "return false;",
    "indent": 2
   },
   {
    "content": "} else {",
    "indent": 1
   },
   {
    "content": "return (a * a) + (b * b) == (c * c);",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 6,
  "fileEnding": "java",
  "title": "pythagtrip",
  "charCount": 157
 },
 {
  "lines": [
   {
    "content": "public static int sumOfDigits(int number) {",
    "indent": 0
   },
   {
    "content": "number = number < 0 ? -number : number;",
    "indent": 1
   },
   {
    "content": "int sum = 0;",
    "indent": 1
   },
   {
    "content": "while (number != 0) {",
    "indent": 1
   },
   {
    "content": "sum += number % 10;",
    "indent": 2
   },
   {
    "content": "number /= 10;",
    "indent": 2
   },
   {
    "content": "}",
    "indent": 1
   },
   {
    "content": "return sum;",
    "indent": 1
   },
   {
    "content": "}",
    "indent": 0
   }
  ],
  "id": 7,
  "fileEnding": "java",
  "title": "sumofdigits",
  "charCount": 168
 }
]